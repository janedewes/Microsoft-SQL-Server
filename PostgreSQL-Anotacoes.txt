Armazenamento de dados no PostgreSQL

TUTORIAL: 
https://www.w3schools.com/sql/sql_intro.asp
http://www.sqlcourse.com/intro.html

*************************************************************************************
1º) Abrir pgAdmin4

2º) Criar Banco de Dados 

3º) Criar Schemas 

4º) Criar Tabelas (com as respectivas colunas)


5º) Fazer a carga de dados 
Botao direito na tabela IMPORT/EXPORT


6º) Alterar com ling SQL: 
Botao direito na tabela QUERY TOOL
ex: Alterar o formato de uma tabela:

alter table cap16."TB_FUNC" alter column numero_filhos type character varying (2);

(clicar no Play)


7º) As tabelas ficam dentro de Schemas no BD: Schema."nome_da_tabela"
ex:
select * from cap16."TB_FUNC"
select * from cap16."TB_FUNC" limit 5 (quando a tabela for muito grande, evitar travamento)(ou)
select * from cap16."TB_FUNC" fetch first 5 rows only


8º) Linhas duplicadas - Remover duplicidade se houver
ex:
select distinct * from cap16."TB_FUNC" (como id é a chave primaria, ele nunca irá retornar linhas duplicadas)
select distinct numero_filhos from cap16."TB_FUNC" (de uma coluna específica)


9º) Filtrar dados 
ex:
select * from cap16."TB_FUNC" where idade = 30


10º) Operadores de Comparação
Ex selecionar o numero de linhas a partir de uma tabela:
select count(*) from cap16."TB_FUNC"
select count(*) from cap16."TB_FUNC" where idade = 40
select count(*) from cap16."TB_FUNC" where idade != 40
select count(*) from cap16."TB_FUNC" where idade > 40
select count(*) from cap16."TB_FUNC" where idade >= 40
select count(*) from cap16."TB_FUNC" where idade <= 40
select count(*) from cap16."TB_FUNC" where idade < 40



11º) Operadores Lógicos  
ex Servem para concatenar diversas operações de comparação:
select * from cap16."TB_FUNC" where idade < 30 and estado_civil = 'casado' (duas condições devem ser verdadeiras)
select * from cap16."TB_FUNC" where idade < 30 or estado_civil = 'viuvo' (uma das opçoes verdadeira)


12º) BETWEEN (inclusive)
select * from cap16."TB_FUNC" where idade between 30 and 35

13º) LIKE- Pesquisar por strings: (% caracter que acompanha o like, sem o % ele faz a comparação exata)
select * from cap16."TB_FUNC" where grau_instrucao like '%medio'
select * from cap16."TB_FUNC" where grau_instrucao like 'medio%'
select * from cap16."TB_FUNC" where grau_instrucao like '%medio%'


14º) IN 
select * from cap16."TB_FUNC" where idade in (20, 30, 40, 50)


*************************************************************************************
15º) IS NULL (valor ausente)
select * from cap16."TB_FUNC" where numero_filhos is not null (caracteres de strings)

16º) UPDATE (para nulo)
Ex: converter NA em valor nulo:
update cap16."TB_FUNC"
set numero_filhos = null 
where numero_filhos = 'NA';

commit; (grava a atualização feita no BD)

select * from cap16."TB_FUNC" where numero_filhos is null 

*************************************************************************************

17º) TRUNCATE (limpar uma tabela) 
truncate 
truncate cascade (limpa tabelas associadas)


18º) DELETE
delete from cap16."TB_FUNC" (apaga todos os registros da tabela!!)

delete from cap16."TB_FUNC"
where numero_filhos = 'NA';

commit; (grava alteração no BD)



19º) INSERT (Postgre possui a opção de alguns scripts disponíveis, para isso clicar com botao direito 
sobre a tabela na opção SCRIPTS)

INSERT INTO cap16."TB_FUNC"(
	id, estado_civil, grau_instrucao, numero_filhos, salario_hora, idade, reg_procedencia)
	VALUES (?, ?, ?, ?, ?, ?, ?);


20º) ORDER BY
select * from cap16."TB_FUNC" order by salario_hora asc
select * from cap16."TB_FUNC" order by salario_hora desc
select * from cap16."TB_FUNC" order by salario_hora, reg_procedencia desc (2cols)
select * from cap16."TB_FUNC" order by salario_hora desc, reg_procedencia desc (2cols)


21º) MIN, MAX, AVG, COUNT, SUM
select min(salario_hora), max(salario_hora), avg(salario_hora), count(*), sum(salario_hora) from cap16."TB_FUNC" 


22º) GROUP BY (resumir os dados por níveis)
select distinct reg_procedencia from cap16."TB_FUNC";

Obter info por região de procedencia:
select round(avg(salario_hora)),  reg_procedencia
from cap16."TB_FUNC" 
group by reg_procedencia;

Obter info por grau de instrução:
select round(avg(salario_hora)), grau_instrucao
from cap16."TB_FUNC" 
group by grau_instrucao;


*************************************************************************************
EXEMPLO:
/* Instrução SQL que retorna a média de idade, número de filhos e grau de instrução dos funcionários cujo 
salário_hora estiver acima da média de todos os funcionários.
Retornar os dados somente de funcionários da capital e estado civil casado, com ordem decrescente da media de idade.
*/

select round(avg(idade)), numero_filhos, grau_instrucao
from cap16."TB_FUNC"
where reg_procedencia = 'capital'
	and estado_civil = 'casado'
	and salario_hora > (select avg(salario_hora) from cap16."TB_FUNC") (essa linha é uma subquery)
group by numero_filhos, grau_instrucao
order by  round(avg(idade)) desc

*************************************************************************************
EXEMPLO:
/*  Retornar todos os regiistros dos funcionários com 2 filhos. 
usar cast (conversao de tipos de dados)*/

select * 
from cap16."TB_FUNC"
where numero_filhos = '2'

ou 

select * 
from cap16."TB_FUNC"
where cast(numero_filhos as integer) = 2

*************************************************************************************
EXEMPLO: (JOIN)
/* Retornar a média de salário hora por estado */

select avg(salario_hora), estado 
from cap16."TB_FUNC" f, cap16."TB_ENDERECO" e  ("f" e "e" são apelidos para as tabelas)
where f.id = e.id_func
group by estado 

ou o ideal(com os respectivos apelidos na frente das colunas para indicar de quais tabelas os mesmos são: 

select round(avg(f.salario_hora)), e.estado 
from cap16."TB_FUNC" f, cap16."TB_ENDERECO" e
where f.id = e.id_func
group by e.estado


************************************************************************************* 

23º Criação de Views - (Salvar querys para usar toda vez sem precisar digitar tudo novamente)
- Botão direito - create - view
- Nomear a view
- Em code colar query desejada
- Digitar comando abaixo para chamar a query salva: 
select  * from cap16."VW_FUNC"
